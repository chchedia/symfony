<?php

namespace OC\PlatformBundle\Repository;

use Doctrine\DBAL\Query\QueryBuilder;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends EntityRepository
{
    /**
     * @param \DateTime $date
     * @return mixed
     */
    public function getAdvertBefore(\DateTime $date)
    {
        $query= $this->createQueryBuilder('a')
            ->where('a.updatedAt < :date')
            ->orWhere('a.date < :date AND a.updatedAt IS NULL')
            ->andWhere('a.applications IS EMPTY')
            ->setParameter('date', $date);
        return $query->getQuery()->getResult();
    }

    /**
     * get all Adverts
     * @return mixed
     */
    public function getAdverts($page, $nbPerPage)
    {
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.image', 'i')
            ->addSelect('i')
            ->leftJoin('a.categories', 'c')
            ->addSelect('c')
            ->orderBy('a.date', 'DESC')
            ->getQuery();

        $query->setFirstResult(($page - 1) * $nbPerPage)
            ->setMaxResults($nbPerPage);

        return new Paginator($query,true);
    }

    /**
     *
     * @param array $categoryNames
     * @return mixed
     */
    public function getAdvertWithCategories(array $categoryNames)
    {
        $qb = $this->createQueryBuilder('a')
            ->innerJoin('a.categories', 'c')
            ->addSelect('c');
        $qb->where($qb->expr()->in('c.name', $categoryNames));

        return $qb->getQuery()->getResult();
    }

}
